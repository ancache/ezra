# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://jashkenas.github.com/coffee-script/
$(document).ready ->
	# Because I don't want to deal with rails' asset pipeline conditional loading.
	if window.location.pathname.indexOf("hits") isnt -1 
		soundManager.url = "<%= '/ezra2' + asset_path('soundmanager2_debug.swf') %>"
		soundManager.debug = false
		soundManager.useHighPerformance = true
		soundManager.useFastPolling = true
		soundManager.useHTML5Audio = true
		soundManager.autoLoad = true
		window.smt = soundManagerTime();

		PP_CONFIG = {
			autoStart: false,      # begin playing first sound when page loads
			playNext: true,        # stop after one sound, or play through list until end
			useThrottling: false,  # try to rate-limit potentially-expensive calls (eg. dragging position around)</span>
			usePeakData: true,     # [Flash 9 only] whether or not to show peak data (left/right channel values) - nor noticable on CPU
			useWaveformData: false,# [Flash 9 only] show raw waveform data - WARNING: LIKELY VERY CPU-HEAVY
			useEQData: false,      # [Flash 9 only] show EQ (frequency spectrum) data
			useFavIcon: false      # try to apply peakData to address bar (Firefox + Opera) - performance note: appears to make Firefox 3 do some temporary, heavy disk access/swapping/garbage collection at first(?) - may be too heavy on CPU
		}

		confirmed = $('#selections').attr("data-loaded")
		$('.status-box').tooltip()
		$('[data-status='+confirmed+']').addClass('selected')
		$('#location').html(smt.toText(smt.secondsToRaw($('#location').attr("data-value"))));
		$('#alertBox,#downloading').hide()

		$('.needs-validation, .transcript-time').change ->
			changeSave()

		$('.needs-validation').click ->
			changeSave()

		$('.status-box').click ->
			value = $(this).attr("data-status")
			setStatus(value)

		$('#mark-hit').click ->
			$('#location').html(smt.toText(smt.getTime()))
			$('#hit_location').val(smt.toSeconds(smt.getTime()))

		$('.now').click ->
			setWindowBound($(this))

		$('.start-time-box input').change ->
			manuallySetWindowBound('start')

		$('.end-time-box input').change ->
			manuallySetWindowBound('end')

		$('#play-span').click ->
			toWindowStart()

		$('#download-clip').click ->
			$('#downloading').show().text("Downloading file... May take a few minutes for large files or slow internet connections")
			$.ajax 'save_clip',
				type: 'POST',
				dataType: 'json',
				data: {
					id: $('#id').val(),
					startTime: smt.toSeconds(smt.secondsToRaw($('#hit_window_start').val())),
					endTime: smt.toSeconds(smt.secondsToRaw(Number($('#hit_window_start').val()) + Number($('#hit_window_duration').val())))
				},
				success: (response) ->
					$('#downloading').html("Saved successfully! <a target='_blank' href='"+response.link+"'>Listen here</a>")
				,
				error: (xhr) ->
					errors = $.parseJSON(xhr.responseText).errors
					$('#downloading').text(errors)
				
			

		windowStart = smt.secondsToRaw($('#hit_window_start').val())
		windowDuration = smt.secondsToRaw(Number($('#hit_window_start').val()) + Number($('#hit_window_duration').val()))
		setWindowTime('start', windowStart)
		setWindowTime('end', windowDuration)


changeSave = () ->
	validate()
	$('[name=commit]').removeClass('btn-primary').addClass('btn-danger').val("Save changes")

window.toWindowStart = () ->
	if(soundManager.getSoundById('pagePlayerMP3Sound0').paused)
		togglePlayer()
	time = ""+smt.toMilliseconds(smt.getWindowTime('start'))
	soundManager.setPosition("pagePlayerMP3Sound0",time)
	end = ""+smt.toMilliseconds(smt.getWindowTime('end'))
	soundManager.onPosition("pagePlayerMP3Sound0",end,(eventPosition) -> togglePlayer())

window.setWindowTime = (loc, time) ->
	$('#'+loc+'-time-hours').val(~~(time.hours))
	$('#'+loc+'-time-minutes').val(~~(time.minutes))
	$('#'+loc+'-time-seconds').val(~~(time.seconds))
	$('#'+loc+'-time-milliseconds').val(~~(time.milliseconds))

# Set the window bound by manually typing in the numbers
# loc is a string, rather than an actual node
window.manuallySetWindowBound = (loc) ->
	time = smt.getWindowTime(loc)
	if(loc is 'start')
		end = smt.getWindowTime('end')
		$('#hit_window_start').val(smt.toSeconds(time))
		$('#hit_window_duration').val((smt.toSeconds(end)-smt.toSeconds(time)))
	else 
		start = smt.getWindowTime('start')
		$('#hit_window_duration').val((smt.toSeconds(time)-smt.toSeconds(start)))
	changeSave()

# Set window bound by clicking the one of the buttons
window.setWindowBound = (loc) ->
	loc = loc.attr("id").split("-")[0]
	time = smt.getTime()
	setWindowTime(loc, time)
	if(loc is 'start')
		$('#hit_window_start').val(smt.toSeconds(time))
	else 
		$('#hit_window_duration').val((smt.toSeconds(time)-$('#hit_window_start').val()))
	changeSave()

window.setStatus = (num) ->
	$('.status-box').filter( -> $(this).attr("data-status") isnt num).removeClass('selected')
	$('[data-status='+num+']').addClass("selected")
	$('#hit_confirmed').val(num)

#Seek in a direction (1 forward, -1 backwards) in the audio file
window.seeker = (dir) ->
	orig = soundManager.onPosition("pagePlayerMP3Sound0").position
	step = dir*20
	time = orig+step

	soundManager.setPosition("pagePlayerMP3Sound0",time)

	#If the time doesn't change, increment by the step again to try forcing a change
	#This is due to the variable size of the frames of the mp3 as stored by the flash player (which is what's being used
	#instead of HTML5 audio at the moment)

	#Note: not sure why seeking backwards can only have one step back, but it seems to work, so I'll chalk that up to
	#Flash being weird.
	if(soundManager.onPosition("pagePlayerMP3Sound0").position is orig+step and dir isnt -1)
		soundManager.setPosition("pagePlayerMP3Sound0",time+step)

soundManagerTime = () -> 
	getTime: ->
		time = $('.sm2_position').text()
		if(time isnt "")
			splitTime = time.split(":")
			hours = Math.floor(splitTime[0]/60)
			minutes = splitTime[0]-(hours*60)
			seconds = splitTime[1]
			milliseconds = splitTime[2]
			return {hours: hours, minutes: minutes, seconds: seconds, milliseconds: milliseconds}
		else
			return {hours: 0, minutes: 0, seconds: 0, milliseconds: 0}
	getWindowTime: (loc) ->
		hours = parseInt($('#'+loc+'-time-hours').val(),10)
		minutes = parseInt($('#'+loc+'-time-minutes').val(),10)
		seconds = parseInt($('#'+loc+'-time-seconds').val(),10)
		milliseconds = parseInt($('#'+loc+'-time-milliseconds').val(),10)
		return {hours: hours, minutes: minutes, seconds: seconds, milliseconds: milliseconds}
	#getTimeText: ->
	#	time = @getTime()
	#	hours = if time.hours < 10 then '0'+time.hours else time.hours
	#	minutes = if time.minutes < 10 then '0'+time.minutes else time.minutes
	#	seconds = time.seconds
	#	milliseconds = if time.milliseconds < 100 then '0'+time.milliseconds else time.milliseconds
	#	milliseconds = if time.milliseconds < 10 then '0'+time.milliseconds else time.milliseconds
	#	return {hours: hours, minutes: minutes, seconds: seconds, milliseconds: milliseconds}
	toMilliseconds: (time) ->
		@toSeconds(time) * 1000
	toText: (time) ->
		time.hours + ":" + time.minutes + ":" + time.seconds + ":" + time.milliseconds
	#must be a time object in the format above
	toSeconds: (time) ->
		return time.hours*60*60*1000+time.minutes*60+parseInt(time.seconds,10)+time.milliseconds/1000
	secondsToRaw: (seconds) ->
		milliseconds = seconds*1000
		hours = Math.floor(milliseconds/(1000*60*60))
		milliseconds = milliseconds-(hours*1000*60*60)
		minutes = Math.floor(milliseconds/(1000*60))
		milliseconds = milliseconds-(minutes*1000*60)
		seconds = Math.floor(milliseconds/1000)
		milliseconds = milliseconds-seconds*1000
		{hours: hours, minutes: minutes, seconds: seconds, milliseconds: milliseconds}


window.togglePlayer = () ->
	pagePlayer.handleClick({target:pagePlayer.getByClassName('playlist', 'ul')[0].getElementsByTagName('a')[0]});



validate = () ->
	alertBox = $('#alertBox')
	if(+$('#hit_confirmed').val() is 1)
		alertBox.text("")
		if(+$('#hit_location').val() is 0)
			alertBox.text("Location cannot be 0")
		else if(not +$('#hit_window_start').val())
			alertBox.text("Transcript start cannot be 0")
		else if(+$('#hit_window_end').val() is 0)
			alertBox.text("Transcript end cannot be 0")
		else if(+$('#hit_window_end').val() < -1)
			alertBox.text("Transcript end must be after transcript start")

		if(alertBox.text() isnt "")
			alertBox.show()
			$('[name=commit]').addClass("disabled")
		else
			alertBox.text("").hide()
			$('[name=commit]').removeClass("disabled")
	else
		alertBox.text("").hide()
		$('[name=commit]').removeClass("disabled")